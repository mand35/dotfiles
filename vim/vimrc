"Use Vim settings, rather then Vi settings (much better!).
"This must be first, because it changes other options as a side effect.
set nocompatible

"activate pathogen
call pathogen#infect()
call pathogen#helptags()

"set colorscheme
colorscheme jellybeans "shady

"allow backspacing over everything in insert mode
set backspace=indent,eol,start

"store lots of :cmdline history
set history=1000

set showcmd     "show incomplete cmds down the bottom
set showmode    "show current mode down the bottom
set showmatch   "set show matching parenthesis

set number      "show line numbers

"display tabs and trailing spaces with dots
"set list
"set listchars=tab:▷⋅,trail:⋅,nbsp:⋅

"highlight tabs and trailing spaces
highlight LiteralTabs ctermbg=darkgreen guibg=darkgreen
autocmd ColorScheme * highlight LiteralTabs ctermbg=red guibg=red
match LiteralTabs /\s\  /

highlight ExtraWhitespace ctermbg=darkgreen guibg=darkgreen
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
"match ExtraWhitespace /\s\+\%#\@<!$/
match ExtraWhitespace /\s\+$/

" active pastetoggle
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>

set incsearch   "find the next match as we type the search
set hlsearch    "hilight searches by default
set ignorecase  "ignore case when searching

set wrap        "dont wrap lines
set linebreak   "wrap lines at convenient points

" Swap files in a central location, no swap files amongst project.
" Can be a bad idea when editing several files of the same name.
set backupdir=~/.vim/swap
set directory=~/.vim/swap
"undo settings
set undodir=~/.vim/undofiles
set undofile

if v:version >= 703
    " mark the ideal max text width
    "set colorcolumn=+1
    " mark current line and column
    "set cursorline                           "underline the current line in the file
    "set cursorcolumn                         "highlight the current column. Visible in GUI mode only.
endif

" Default to Unicode/UTF-8 rather than latin1
set encoding=utf-8

"default indent settings
set shiftwidth=4
set softtabstop=4
"set tabstop=8
set expandtab
set autoindent
"set cindent           "recommended seting for automatic C-style indentation

"folding settings
set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

set wildmode=list:longest   "make cmdline tab completion similar to bash
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing

"vertical/horizontal scroll off settings
set scrolloff=3
set sidescrolloff=7
set sidescroll=1

"load ftplugins and indent files
filetype plugin on
filetype indent on

"turn on syntax highlighting
syntax on

"some stuff to get the mouse going in term
"set mouse=a
"set ttymouse=xterm2

"tell the term has 256 colors
set t_Co=256

"hide buffers when not displayed
set hidden

set laststatus=2

"jump to last cursor position when opening a file
"dont do it when writing a commit log entry
autocmd BufReadPost * call SetCursorPosition()
function! SetCursorPosition()
    if &filetype !~ 'svn\|commit\c'
        if line("'\"") > 0 && line("'\"") <= line("$")
            exe "normal! g`\""
            normal! zz
        endif
    end
endfunction

" Don't add the comment prefix when I hit enter or o/O on a comment line.
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

"lin ruby scripts on save
autocmd FileType ruby map <F3> :w<CR>:!ruby -c %<CR>

" configure NERDTree
map <C-n> :NERDTreeToggle<CR>
"close vim if NERDTree is the last open buffer
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" Arrow keys navigate split windows!
nmap <Up> <C-W><Up>
nmap <Down> <C-W><Down>
nmap <Left> <C-W><Left>
nmap <Right> <C-W><Right>

" Reselect visual block after indent (thanks @twe4ked)
vnoremap < <gv
vnoremap > >gv

